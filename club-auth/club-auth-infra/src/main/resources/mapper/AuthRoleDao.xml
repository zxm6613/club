<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxm.club.auth.infra.basic.mapper.AuthRoleDao">

    <resultMap type="com.zxm.club.auth.infra.basic.entity.AuthRole" id="AuthRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="roleKey" column="role_key" jdbcType="INTEGER"/>
        <result property="dataRange" column="data_range" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createdBy" column="CREATED_BY" jdbcType="VARCHAR"/>
        <result property="createdTime" column="CREATED_TIME" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="UPDATED_BY" jdbcType="VARCHAR"/>
        <result property="updatedTime" column="UPDATED_TIME" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AuthRoleMap">
        select
          id, role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
        from auth_role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AuthRoleMap">
        select
          id, role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
        from auth_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="roleKey != null">
                and role_key = #{roleKey}
            </if>
            <if test="dataRange != null">
                and data_range = #{dataRange}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and CREATED_BY = #{createdBy}
            </if>
            <if test="createdTime != null">
                and CREATED_TIME = #{createdTime}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and UPDATED_BY = #{updatedBy}
            </if>
            <if test="updatedTime != null">
                and UPDATED_TIME = #{updatedTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from auth_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="roleKey != null">
                and role_key = #{roleKey}
            </if>
            <if test="dataRange != null">
                and data_range = #{dataRange}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and CREATED_BY = #{createdBy}
            </if>
            <if test="createdTime != null">
                and CREATED_TIME = #{createdTime}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and UPDATED_BY = #{updatedBy}
            </if>
            <if test="updatedTime != null">
                and UPDATED_TIME = #{updatedTime}
            </if>
        </where>
    </select>
    <select id="queryByName" resultMap="AuthRoleMap">
        select
            id, role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME
        from auth_role
        where role_name = #{roleName}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role(role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
        values (#{roleName}, #{status}, #{roleKey}, #{dataRange}, #{isDelete}, #{createdBy}, #{createdTime}, #{updatedBy}, #{updatedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role(role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.roleName}, #{entity.status}, #{entity.roleKey}, #{entity.dataRange}, #{entity.isDelete}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updatedBy}, #{entity.updatedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into auth_role(role_name, status, role_key, data_range, is_delete, CREATED_BY, CREATED_TIME, UPDATED_BY, UPDATED_TIME)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.status}, #{entity.roleKey}, #{entity.dataRange}, #{entity.isDelete}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updatedBy}, #{entity.updatedTime})
        </foreach>
        on duplicate key update
        role_name = values(role_name),
        status = values(status),
        role_key = values(role_key),
        data_range = values(data_range),
        is_delete = values(is_delete),
        CREATED_BY = values(CREATED_BY),
        CREATED_TIME = values(CREATED_TIME),
        UPDATED_BY = values(UPDATED_BY),
        UPDATED_TIME = values(UPDATED_TIME)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update auth_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="roleKey != null">
                role_key = #{roleKey},
            </if>
            <if test="dataRange != null">
                data_range = #{dataRange},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="createdBy != null and createdBy != ''">
                CREATED_BY = #{createdBy},
            </if>
            <if test="createdTime != null">
                CREATED_TIME = #{createdTime},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                UPDATED_BY = #{updatedBy},
            </if>
            <if test="updatedTime != null">
                UPDATED_TIME = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="logicDelete">
        update auth_role set is_delete = 1 where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from auth_role where id = #{id}
    </delete>

</mapper>

